// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`renders correctly WeatherCard  1`] = `
ShallowWrapper {
  "complexSelector": ComplexSelector {
    "buildPredicate": [Function],
    "childrenOfNode": [Function],
    "findWhereUnwrapped": [Function],
  },
  "length": 1,
  "node": <div
    className="weather-card"
>
    <div
        className="weather-card-content"
    >
        <p>
            2
            째 C
        </p>
        <p>
            rainy
        </p>
        <p>
            Humidity: 
            100
        </p>
    </div>
</div>,
  "nodes": Array [
    <div
      className="weather-card"
>
      <div
            className="weather-card-content"
      >
            <p>
                  2
                  째 C
            </p>
            <p>
                  rainy
            </p>
            <p>
                  Humidity: 
                  100
            </p>
      </div>
</div>,
  ],
  "options": Object {},
  "renderer": ReactShallowRenderer {
    "_instance":  {
      "_calledComponentWillUnmount": false,
      "_compositeType": 0,
      "_context": Object {},
      "_currentElement": <WeatherCard
        data={
                Object {
                        "avgTemp": "2",
                        "humidity": 100,
                        "weatherDesc": "rainy",
                      }
        }
/>,
      "_debugID": 1,
      "_hostContainerInfo": null,
      "_hostParent": null,
      "_instance": WeatherCard {
        "_reactInternalInstance": [Circular],
        "context": Object {},
        "props": Object {
          "data": Object {
            "avgTemp": "2",
            "humidity": 100,
            "weatherDesc": "rainy",
          },
        },
        "refs": Object {},
        "state": null,
        "updater": Object {
          "enqueueCallback": [Function],
          "enqueueCallbackInternal": [Function],
          "enqueueElementInternal": [Function],
          "enqueueForceUpdate": [Function],
          "enqueueReplaceState": [Function],
          "enqueueSetState": [Function],
          "isMounted": [Function],
          "validateCallback": [Function],
        },
      },
      "_mountOrder": 1,
      "_pendingCallbacks": null,
      "_pendingElement": null,
      "_pendingForceUpdate": false,
      "_pendingReplaceState": false,
      "_pendingStateQueue": null,
      "_renderedComponent": NoopInternalComponent {
        "_currentElement": <div
          className="weather-card"
>
          <div
                    className="weather-card-content"
          >
                    <p>
                              2
                              째 C
                    </p>
                    <p>
                              rainy
                    </p>
                    <p>
                              Humidity: 
                              100
                    </p>
          </div>
</div>,
        "_debugID": 2,
        "_renderedOutput": <div
          className="weather-card"
>
          <div
                    className="weather-card-content"
          >
                    <p>
                              2
                              째 C
                    </p>
                    <p>
                              rainy
                    </p>
                    <p>
                              Humidity: 
                              100
                    </p>
          </div>
</div>,
      },
      "_renderedNodeType": 0,
      "_rootNodeID": 0,
      "_topLevelWrapper": null,
      "_updateBatchNumber": null,
      "_warnedAboutRefsInRender": false,
    },
    "getRenderOutput": [Function],
    "render": [Function],
  },
  "root": [Circular],
  "unrendered": <WeatherCard
    data={
        Object {
            "avgTemp": "2",
            "humidity": 100,
            "weatherDesc": "rainy",
          }
    }
/>,
}
`;
